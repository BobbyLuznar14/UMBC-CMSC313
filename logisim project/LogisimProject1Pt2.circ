<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project source="2.13.8" version="1.0">
  This file is intended to be loaded by Logisim-evolution (https://github.com/reds-heig/logisim-evolution).

  <lib desc="#Wiring" name="0"/>
  <lib desc="#Gates" name="1"/>
  <lib desc="#Plexers" name="2">
    <tool name="Multiplexer">
      <a name="enable" val="false"/>
    </tool>
    <tool name="Demultiplexer">
      <a name="enable" val="false"/>
    </tool>
  </lib>
  <lib desc="#Arithmetic" name="3"/>
  <lib desc="#Memory" name="4">
    <tool name="ROM">
      <a name="contents">addr/data: 8 8
0
</a>
    </tool>
  </lib>
  <lib desc="#I/O" name="5"/>
  <lib desc="#HDL-IP" name="6">
    <tool name="VHDL Entity">
      <a name="content">--------------------------------------------------------------------------------&#13;
-- HEIG-VD, institute REDS, 1400 Yverdon-les-Bains&#13;
-- Project :&#13;
-- File    :&#13;
-- Autor   :&#13;
-- Date    :&#13;
--&#13;
--------------------------------------------------------------------------------&#13;
-- Description :&#13;
--&#13;
--------------------------------------------------------------------------------&#13;
&#13;
library ieee;&#13;
  use ieee.std_logic_1164.all;&#13;
  --use ieee.numeric_std.all;&#13;
&#13;
entity VHDL_Component is&#13;
  port(&#13;
  ------------------------------------------------------------------------------&#13;
  --Insert input ports below&#13;
    horloge_i  : in  std_logic;                    -- input bit example&#13;
    val_i      : in  std_logic_vector(3 downto 0); -- input vector example&#13;
  ------------------------------------------------------------------------------&#13;
  --Insert output ports below&#13;
    max_o      : out std_logic;                    -- output bit example&#13;
    cpt_o      : out std_logic_Vector(3 downto 0)  -- output vector example&#13;
    );&#13;
end VHDL_Component;&#13;
&#13;
--------------------------------------------------------------------------------&#13;
--Complete your VHDL description below&#13;
architecture type_architecture of VHDL_Component is&#13;
&#13;
&#13;
begin&#13;
&#13;
&#13;
end type_architecture;&#13;
</a>
    </tool>
  </lib>
  <lib desc="#TCL" name="7">
    <tool name="TclGeneric">
      <a name="content">library ieee;&#13;
use ieee.std_logic_1164.all;&#13;
&#13;
entity TCL_Generic is&#13;
  port(&#13;
    --Insert input ports below&#13;
    horloge_i  : in  std_logic;                    -- input bit example&#13;
    val_i      : in  std_logic_vector(3 downto 0); -- input vector example&#13;
&#13;
	  --Insert output ports below&#13;
    max_o      : out std_logic;                    -- output bit example&#13;
    cpt_o      : out std_logic_Vector(3 downto 0)  -- output vector example&#13;
  );&#13;
end TCL_Generic;&#13;
</a>
    </tool>
  </lib>
  <lib desc="#Base" name="8">
    <tool name="Text Tool">
      <a name="text" val=""/>
      <a name="font" val="SansSerif plain 12"/>
      <a name="halign" val="center"/>
      <a name="valign" val="base"/>
    </tool>
  </lib>
  <main name="main"/>
  <options>
    <a name="gateUndefined" val="ignore"/>
    <a name="simlimit" val="1000"/>
    <a name="simrand" val="0"/>
    <a name="tickmain" val="half_period"/>
  </options>
  <mappings>
    <tool lib="8" map="Button2" name="Menu Tool"/>
    <tool lib="8" map="Button3" name="Menu Tool"/>
    <tool lib="8" map="Ctrl Button1" name="Menu Tool"/>
  </mappings>
  <toolbar>
    <tool lib="8" name="Poke Tool"/>
    <tool lib="8" name="Edit Tool"/>
    <tool lib="8" name="Text Tool">
      <a name="text" val=""/>
      <a name="font" val="SansSerif plain 12"/>
      <a name="halign" val="center"/>
      <a name="valign" val="base"/>
    </tool>
    <sep/>
    <tool lib="0" name="Pin"/>
    <tool lib="0" name="Pin">
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
      <a name="labelloc" val="east"/>
    </tool>
    <tool lib="1" name="NOT Gate"/>
    <tool lib="1" name="AND Gate"/>
    <tool lib="1" name="OR Gate"/>
  </toolbar>
  <circuit name="main">
    <a name="circuit" val="main"/>
    <a name="clabel" val=""/>
    <a name="clabelup" val="east"/>
    <a name="clabelfont" val="SansSerif plain 12"/>
    <a name="circuitvhdl" val="false"/>
    <a name="circuitvhdlpath" val=""/>
    <wire from="(250,490)" to="(440,490)"/>
    <wire from="(1010,450)" to="(1130,450)"/>
    <wire from="(110,380)" to="(110,710)"/>
    <wire from="(700,470)" to="(950,470)"/>
    <wire from="(690,460)" to="(690,550)"/>
    <wire from="(110,300)" to="(110,380)"/>
    <wire from="(210,320)" to="(210,400)"/>
    <wire from="(110,300)" to="(410,300)"/>
    <wire from="(80,360)" to="(440,360)"/>
    <wire from="(210,400)" to="(440,400)"/>
    <wire from="(130,180)" to="(170,180)"/>
    <wire from="(230,180)" to="(270,180)"/>
    <wire from="(80,270)" to="(80,360)"/>
    <wire from="(150,470)" to="(440,470)"/>
    <wire from="(150,550)" to="(440,550)"/>
    <wire from="(150,630)" to="(440,630)"/>
    <wire from="(60,180)" to="(60,210)"/>
    <wire from="(670,450)" to="(670,470)"/>
    <wire from="(100,180)" to="(100,210)"/>
    <wire from="(50,290)" to="(50,450)"/>
    <wire from="(350,260)" to="(440,260)"/>
    <wire from="(250,260)" to="(250,490)"/>
    <wire from="(80,610)" to="(80,710)"/>
    <wire from="(110,180)" to="(130,180)"/>
    <wire from="(50,180)" to="(50,290)"/>
    <wire from="(210,180)" to="(230,180)"/>
    <wire from="(110,380)" to="(440,380)"/>
    <wire from="(50,530)" to="(50,710)"/>
    <wire from="(690,460)" to="(950,460)"/>
    <wire from="(500,280)" to="(580,280)"/>
    <wire from="(110,180)" to="(110,300)"/>
    <wire from="(580,280)" to="(580,330)"/>
    <wire from="(50,450)" to="(440,450)"/>
    <wire from="(50,530)" to="(440,530)"/>
    <wire from="(210,650)" to="(210,710)"/>
    <wire from="(580,330)" to="(910,330)"/>
    <wire from="(500,550)" to="(690,550)"/>
    <wire from="(500,380)" to="(870,380)"/>
    <wire from="(150,270)" to="(150,470)"/>
    <wire from="(210,180)" to="(210,320)"/>
    <wire from="(270,180)" to="(270,200)"/>
    <wire from="(50,450)" to="(50,530)"/>
    <wire from="(500,470)" to="(670,470)"/>
    <wire from="(410,280)" to="(410,300)"/>
    <wire from="(430,300)" to="(430,320)"/>
    <wire from="(150,470)" to="(150,550)"/>
    <wire from="(150,630)" to="(150,710)"/>
    <wire from="(150,550)" to="(150,630)"/>
    <wire from="(210,570)" to="(210,650)"/>
    <wire from="(50,160)" to="(50,180)"/>
    <wire from="(110,160)" to="(110,180)"/>
    <wire from="(50,290)" to="(350,290)"/>
    <wire from="(910,430)" to="(950,430)"/>
    <wire from="(210,160)" to="(210,180)"/>
    <wire from="(230,180)" to="(230,200)"/>
    <wire from="(250,490)" to="(250,710)"/>
    <wire from="(60,180)" to="(100,180)"/>
    <wire from="(210,570)" to="(440,570)"/>
    <wire from="(80,610)" to="(440,610)"/>
    <wire from="(210,650)" to="(440,650)"/>
    <wire from="(350,260)" to="(350,290)"/>
    <wire from="(130,180)" to="(130,210)"/>
    <wire from="(170,180)" to="(170,210)"/>
    <wire from="(670,450)" to="(950,450)"/>
    <wire from="(410,280)" to="(440,280)"/>
    <wire from="(210,320)" to="(430,320)"/>
    <wire from="(210,400)" to="(210,570)"/>
    <wire from="(910,330)" to="(910,430)"/>
    <wire from="(700,470)" to="(700,630)"/>
    <wire from="(430,300)" to="(440,300)"/>
    <wire from="(870,380)" to="(870,440)"/>
    <wire from="(50,180)" to="(60,180)"/>
    <wire from="(80,360)" to="(80,610)"/>
    <wire from="(870,440)" to="(950,440)"/>
    <wire from="(500,630)" to="(700,630)"/>
    <comp lib="1" loc="(500,380)" name="NAND Gate">
      <a name="inputs" val="3"/>
    </comp>
    <comp lib="1" loc="(150,270)" name="NAND Gate">
      <a name="facing" val="south"/>
    </comp>
    <comp lib="1" loc="(500,550)" name="NAND Gate">
      <a name="inputs" val="3"/>
    </comp>
    <comp lib="8" loc="(750,296)" name="Text">
      <a name="text" val="F(A,B,C)= ((ABC)'(A'BC)'(AB'C')'(AB'C)(A'B'C)')'"/>
    </comp>
    <comp lib="1" loc="(500,550)" name="NAND Gate">
      <a name="inputs" val="3"/>
    </comp>
    <comp lib="1" loc="(500,630)" name="NAND Gate">
      <a name="inputs" val="3"/>
    </comp>
    <comp lib="5" loc="(1130,450)" name="LED"/>
    <comp lib="0" loc="(50,160)" name="Pin">
      <a name="facing" val="south"/>
      <a name="label" val="A"/>
    </comp>
    <comp lib="1" loc="(80,270)" name="NAND Gate">
      <a name="facing" val="south"/>
    </comp>
    <comp lib="1" loc="(500,470)" name="NAND Gate">
      <a name="inputs" val="3"/>
    </comp>
    <comp lib="0" loc="(210,160)" name="Pin">
      <a name="facing" val="south"/>
      <a name="label" val="C"/>
    </comp>
    <comp lib="1" loc="(500,280)" name="NAND Gate">
      <a name="inputs" val="3"/>
    </comp>
    <comp lib="0" loc="(110,160)" name="Pin">
      <a name="facing" val="south"/>
      <a name="label" val="B"/>
    </comp>
    <comp lib="1" loc="(1010,450)" name="NAND Gate">
      <a name="inputs" val="5"/>
    </comp>
    <comp lib="1" loc="(500,470)" name="NAND Gate">
      <a name="inputs" val="3"/>
    </comp>
    <comp lib="1" loc="(500,630)" name="NAND Gate">
      <a name="inputs" val="3"/>
    </comp>
    <comp lib="1" loc="(250,260)" name="NAND Gate">
      <a name="facing" val="south"/>
    </comp>
  </circuit>
</project>
